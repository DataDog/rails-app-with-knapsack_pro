name: Ruby

on: [push]

jobs:
  container-job:
    runs-on: ubuntu-latest

    # runs all of the steps inside the specified continer rather than on the VM host.
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image: circleci/ruby:2.6.3-node-browsers

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.3
    - name: Setup knapsack_pro gem locally
      run: |
        pwd
        sudo mkdir ~/gems
        cd ~/gems && (git clone -b $GITHUB_REF --single-branch https://github.com/KnapsackPro/knapsack_pro-ruby.git || git clone -b master --single-branch https://github.com/KnapsackPro/knapsack_pro-ruby.git)
        cd ~/gems/knapsack_pro-ruby && git branch
        cd ~/gems/knapsack_pro-ruby && git log -n 1 | more
    - name: Build and run tests
      env:
        # use postgres for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        # Ruby project envs
        RAILS_ENV: test
        RACK_ENV: test
        KNAPSACK_PRO_REPO_PATH: ~/gems/knapsack_pro-ruby
        KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC }}
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle exec rspec spec
