version: "1.0"

stages:
  - "clone"
  - "build"
  - "tests"

indicators:
  - common_config: &common_config
      image: '${{BuildTestDockerImage}}'
      working_directory: /src
      fail_fast: false
      environment:
        - KNAPSACK_PRO_REPO_PATH=~/gems/knapsack_pro-ruby
        - RAILS_ENV=test
        - KNAPSACK_PRO_CI_NODE_TOTAL=2
        - KNAPSACK_PRO_CI_NODE_BUILD_ID=${{CF_BUILD_ID}}
        - KNAPSACK_PRO_BRANCH=${{CF_BRANCH}}
        - KNAPSACK_PRO_COMMIT_HASH=${{CF_REVISION}}
        - PGHOST=postgres
        - PGUSER=rails-app-with-knapsack_pro
        - PGPASSWORD=password
      services:
        composition:
          postgres:
            image: postgres:latest
            environment:
              - POSTGRES_DB=rails-app-with-knapsack_pro_test
              - POSTGRES_PASSWORD=password
              - POSTGRES_USER=rails-app-with-knapsack_pro
            ports:
              - 5432

steps:
  main_clone:
    type: "git-clone"
    description: "Cloning main repository..."
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_BRANCH}}"
    stage: "clone"
  BuildTestDockerImage:
    title: Building Test Docker image
    type: build
    arguments:
      image_name: '${{CF_ACCOUNT}}/${{CF_REPO_NAME}}-test'
      tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
      dockerfile: Test.Dockerfile
    stage: "build"

  run_parallel_tests:
    type: parallel
    title: "Run tests with Knapsack Pro"
    stage: "tests"
    steps:
      node_0:
        <<: *common_config
        commands:
          - git --version
          - cd ~/gems && ls -lah
          - env
          - export KNAPSACK_PRO_CI_NODE_INDEX=0
          - bin/rails db:prepare
          - bundle exec rake knapsack_pro:queue:rspec

      node_1:
        <<: *common_config
        commands:
          - export KNAPSACK_PRO_CI_NODE_INDEX=1
          - bin/rails db:prepare
          - bundle exec rake knapsack_pro:queue:rspec
